class HomePage extends StatefulWidget {
  const HomePage ({Key key}) : super(key: key);

  @override
  State<HomePage> createState() => _State();
}
class _State extends State<HomePage>
with TickerProviderStateMixin{

    @override
  Widget build(BuildContext context) {
      TabController _tabController = TabController(length: 2, vsync: this);
      return Scaffold(
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            padding: const EdgeInsets.only(top: 70, left: 20),
            child: Row(
              children: [
                Icon(Icons.menu,size: 30, color: Colors.black,),
                Expanded(child: Container()),
                Container(
                  margin: const EdgeInsets.only(right: 20),
                  width: 50,
                  height: 50,

                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                    color: Colors.grey.withOpacity(0.5),
                  ),
                ),

              ],
            ),
          ),
          SizedBox(height: 40,),
          Container(
          margin: const EdgeInsets.only(left: 20),
          child:  AppLArgeText(text: "TANAMAN GULMA"),
        ),
          SizedBox(height: 30,),
          // Tab Bar Atas
          Container(
            child: Align(
               alignment: Alignment.centerLeft,
              child: TabBar(
                labelPadding: const EdgeInsets.only(left: 20, right: 20),
                controller: _tabController,
                labelColor: Colors.black,
                unselectedLabelColor: Colors.grey,
                isScrollable: true,
                indicatorSize: TabBarIndicatorSize.label,
                indicator: CircleTabIndicator(color:AppColors.mainColor, radius: 4 ),
                tabs: const [
                  Tab(text: "Gulma Obat"),
                  Tab(text: "Gulma Liar"),
                ],
              ),
            ),
          ),
          Container(
            padding: const EdgeInsets.only(left: 20),
            height: 300,
            width: double.maxFinite,
            child: TabBarView(
              controller: _tabController,
              children: [
              ListView.builder (
                itemCount:3,
               scrollDirection:Axis.vertical ,
               itemBuilder: (BuildContext context, int index) {
                return Container(
                  margin: const EdgeInsets.only(bottom: 15),
                   width: 200,
                   height: 300,
                   decoration: BoxDecoration(
                     borderRadius: BorderRadius.circular(20),
                     color: Colors.white,
                     image: const DecorationImage(
                         image: AssetImage(

                             "assets/Ageratum conyzoidesL.png"
                         ),
                         fit: BoxFit.contain,
                     ),
                   ),
                 );
               },
              ),

                Text("Selamat datang 2"),
              ],
            ),
          ),
        ],
      ),
    );
  }
}

class CircleTabIndicator extends Decoration{
  final Color color;
  double radius;
  CircleTabIndicator({this.color, this.radius});
  @override
  BoxPainter createBoxPainter([VoidCallback onChanged]) {
    // TODO: implement createBoxPainter
    return _CirclePainter (color:color, radius:radius);
  }


}
class _CirclePainter extends BoxPainter{
  final Color color;
  double radius;
  _CirclePainter({this.color, this.radius});

  @override
  void paint(Canvas canvas, Offset offset, ImageConfiguration configuration) {
    Paint _paint = Paint();
    _paint.color=color;
    _paint.isAntiAlias=true;
    final Offset circleOffset = Offset(
        configuration.size.width/2 - radius/2,
        configuration.size.height-radius);
    canvas.drawCircle(offset+circleOffset, radius, _paint);
    // TODO: implement paint
  }

}
